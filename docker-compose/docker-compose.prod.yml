version: "3.8"

services:
  # If you need to keep the container running,
  # command: tail -f /dev/null

  # Database Server (Postgres)
  database:
    image: postgres:latest
    volumes:
      - db_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_INITDB_ARGS
    restart: always

  # Cache Server (Cachalot)
  cachalot-cache:
    image: memcached:latest
  environment:
    - MEMCACHED_CACHE_SIZE
    - MEMCACHED_MAX_CONNECTIONS
    - MEMCACHED_THREADS

  # Application Server (Django)
  backend:
    image: bolk9652/skeletonv2:latest
    environment:
      - DEBUG
      - DJANGO_SECRET_KEY
      - DJANGO_ALLOWED_HOSTS
      - DJANGO_DEFAULT_DATABASE_URL
      - DJANGO_STORAGE_ACCESS_KEY_ID
      - DJANGO_STORAGE_SECRET_ACCESS_KEY
      - DJANGO_STATIC_STORAGE_BUCKET_NAME
      - DJANGO_MEDIA_STORAGE_BUCKET_NAME
      - GUNICORN_FORWARDED_ALLOW_IPS
      - GUNICORN_PROXY_ALLOW_IPS
    command: >
      sh -c "
      python manage.py makemigrations
      && python manage.py migrate
      && python manage.py collectstatic --noinput --verbosity 0
      && gunicorn"
    restart: always

  # Web Server (Nginx)
  web:
    image: bolk9652/skeletonv_nginx_test:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/letsencrypt/live/server-testing.kro.kr/fullchain.pem:/etc/nginx/ssl/server-testing.kro.kr.crt
      - /etc/letsencrypt/live/server-testing.kro.kr/privkey.pem:/etc/nginx/ssl/server-testing.kro.kr.key
    command: >
      sh -c "
      envsubst '$$NGINX_DOMAIN $$NGINX_STATIC_STORAGE_BUCKET_URL $$NGINX_MEDIA_STORAGE_BUCKET_URL' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf
      && nginx -g 'daemon off;'"
    environment:
      - NGINX_DOMAIN
      - NGINX_STATIC_STORAGE_BUCKET_URL
      - NGINX_MEDIA_STORAGE_BUCKET_URL
    restart: always

volumes:
  db_volume:
